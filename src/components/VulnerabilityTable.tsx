import {
  Table, TableBody, TableCell, TableContainer,
  TableHead, TableRow, Paper, TablePagination
} from '@mui/material'
import { useEffect, useState } from 'react'

interface Props {
  vulnerabilities: any[]
  onSelect?: (selected: any[]) => void
}

const VulnerabilityTable = ({ vulnerabilities, onSelect }: Props) => {
  const [page, setPage] = useState(0)
  const [rowsPerPage, setRowsPerPage] = useState(10)
  const [selected, setSelected] = useState<Set<number>>(new Set())

  const currentRows = vulnerabilities.slice(
    page * rowsPerPage,
    page * rowsPerPage + rowsPerPage
  )

  const toggleSelect = (index: number) => {
    setSelected((prev) => {
      const next = new Set(prev)
      next.has(index) ? next.delete(index) : next.add(index)
      return next
    })
  }

  useEffect(() => {
    if (onSelect) {
      const selectedItems = currentRows.filter((_, idx) => selected.has(idx))
      onSelect(selectedItems)
    }
  }, [selected, currentRows, onSelect])

  return (
    <Paper>
      <TableContainer>
        <Table stickyHeader>
          <TableHead>
            <TableRow>
              <TableCell padding="checkbox" />
              <TableCell>CVE</TableCell>
              <TableCell>Severity</TableCell>
              <TableCell>CVSS</TableCell>
              <TableCell>Package</TableCell>
              <TableCell>Version</TableCell>
              <TableCell>Fix Date</TableCell>
            </TableRow>
          </TableHead>
          <TableBody>
            {currentRows.map((row, index) => (
              <TableRow key={index}>
                <TableCell padding="checkbox">
                  <input
                    type="checkbox"
                    checked={selected.has(index)}
                    onChange={() => toggleSelect(index)}
                  />
                </TableCell>
                <TableCell>{row.cve}</TableCell>
                <TableCell>{row.severity}</TableCell>
                <TableCell>{row.cvss}</TableCell>
                <TableCell>{row.packageName}</TableCell>
                <TableCell>{row.packageVersion}</TableCell>
                <TableCell>{row.fixDate}</TableCell>
              </TableRow>
            ))}
          </TableBody>
        </Table>
      </TableContainer>
      <TablePagination
        component="div"
        count={vulnerabilities.length}
        page={page}
        onPageChange={(_, newPage) => setPage(newPage)}
        rowsPerPage={rowsPerPage}
        onRowsPerPageChange={(e) => {
          setRowsPerPage(parseInt(e.target.value, 10))
          setPage(0)
        }}
        rowsPerPageOptions={[10, 25, 50, 100]}
      />
    </Paper>
  )
}

export default VulnerabilityTable
